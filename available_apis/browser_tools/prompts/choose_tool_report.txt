You are a helpful AI assistant.

I'll give you a query and a set of tools. Tell me which function you would use to determine the best sections/sub-sections for writing a report on the query (or if you don't need any tool). For determining the best sections/sub-sections for writing a report you might need to search the web to identify the relevant topics to include in the report. DO not try to write the report, we want to do minimal web-search just to identify the relevant topics to include in the report, and not actually write the report. Try to also identify sections in which plots or images might be relevant and easier to find data for plotting.

# Step History
{steps}

# Query
```text
{question}
```

# Tools

## Browser 
The functions of the browser will share the same session, that means the viewport will persist between calls
Every function will return the text of the current viewport after the action is performed. For long pages(longer than 1 viewport), you can use the page_up() and page_down() functions to scroll the viewport.
Since the page has been converted from HTML to Markdown, you cannot submit information using a form, nor can you enter information in any text boxes.
When the page is very long, content truncation may occur due to the limited display capacity of the viewport. You need to carefully consider whether additional page down is needed to ensure that you have obtained the complete information.
- informational_web_search(query: str) -> str:
    Perform an INFORMATIONAL web search query and return the search results. Keep query extensive with relevant context for getting better search reults.
- navigational_web_search(query: str) -> str:
    Perform a NAVIGATIONAL web search query and immediately navigate to the top result. Useful, for example, to navigate to a particular Wikipedia article or other known destination. Equivalent to Google's "I'm Feeling Lucky" button. Keep query extensive with relevant context for getting better search reults.
- visit_page(url: str) -> str:
    Visit a webpage at a given URL and return its text.
- page_up() -> str:
    Scroll the viewport UP one page-length in the current webpage and return the new viewport content.
- page_down() -> str:
    Scroll the viewport DOWN one page-length in the current webpage and return the new viewport content.
- download_file(url: str) -> str:
    Download a file at a given URL and, if possible, return its text. File types that will returned as text: .pdf, .docx, .xlsx, .pptx, .wav, .mp3, .jpg, .jpeg, .png(You can read the text content of the file with these extensions).
- find_on_page_ctrl_f(search_string: str) -> str:
    When the page is too long to be fully displayed in one viewport, you can use this function to scroll the viewport to the first occurrence of the search string. If the viewport has already displayed the entire page(Showing page 1 of 1.), there is no need to use this function. This is equivalent to Ctrl+F. This search string supports wildcards like '*'
- find_next() -> str:
    Scroll the viewport to the next occurrence of the search string.

In the query parameters, we should always give extensive details in the query for full context such that we can search better and specifically when required. Please keep this in consideration always.

When deciding which function to use, consider whether you need to search for additional information to generate a portion of the report on the given query. Use the appropriate tool to search for the necessary information. Try to also identify sections in which plots or images might be relevant and easier to find data for plotting.

Based on the query and the step history, tell me which function you would use to solve the explore more to figure out the relevant sections and subsections one would need to write a comprehensive report.

If the topic is technical then try to add more technical details rather than being generic. And if applicable try to add mathematical aspects and equations to explain the technical concepts please.

Do not change the format and precision of the results (including rounding), as a dedicated person will handle the final formatting of the results.

Use JSON format to answer.
{format_instructions}