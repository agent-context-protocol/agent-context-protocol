{
    "Perplexity": {
      "Input": "A simple query that requires searching the web.",
      "Output": "A compiled answer based on web search results.",
      "Use": "As a web search engine to retrieve and synthesize information from multiple sources into a single, concise response."
    },
    "PlotAgent": {
      "Input": "A query along with relevant response from Perplexity.",
      "Output": "If plots are generated, it returns the location where plots are saved and a plot explanation string; otherwise, it returns 'Fail.'",
      "Use": "For queries that can be visualized through graphs or charts. If initial information is insufficient, it triggers a Perplexity search for more data. It can skip plotting if it determines that plotting does not make sense."
    },
    "TextToImage": {
      "Input": "A prompt describing an image.",
      "Output": "A location where the image generated based on the input prompt, is saved.",
      "Use": "For generating visually compelling illustrations or images that enhance and complement the response, especially when plots are not appropriate."
    },
    "Open-Meteo": {
    "Input": "The API requires the following input parameters:\n- latitude (float, required): WGS84 latitude coordinate of the location.\n- longitude (float, required): WGS84 longitude coordinate of the location.\nOptional parameters that may require your input:\n- hourly (array of strings, optional): Specify hourly weather variables to include in the response (e.g., `temperature_2m`, `wind_speed_10m`).\n- daily (array of strings, optional): Specify daily weather variables to include in the response (e.g., `temperature_2m_max`, `precipitation_sum`).\n- current_weather (boolean, optional): Set to `true` to include current weather data.",
    "Output": "The API returns a JSON object containing weather forecast data for the specified location. The output includes:\n- latitude (float): Latitude of the weather grid cell used.\n- longitude (float): Longitude of the weather grid cell used.\n- elevation (float): Elevation in meters of the selected weather grid cell.\n- hourly (object, if requested): Contains arrays of hourly data for each requested weather variable.\n  - time (array of strings): Timestamps corresponding to hourly data points.\n  - [weather variables]: Arrays of values for each requested hourly variable.\n- daily (object, if requested): Contains arrays of daily data for each requested weather variable.\n  - time (array of strings): Dates corresponding to daily data points.\n  - [weather variables]: Arrays of values for each requested daily variable.\n- current_weather (object, if requested): Current weather conditions including:\n  - time (string): Timestamp of the current weather data.\n  - temperature (float): Current temperature.\n  - wind_speed (float): Current wind speed.\n  - wind_direction (float): Current wind direction.\n  - weather_code (integer): Code representing the current weather condition.",
    "Use": "This API is used to retrieve a 7-day weather forecast for any location worldwide, specified by latitude and longitude coordinates. Users can customize the response by selecting specific hourly and daily weather variables or include current weather data. The API is suitable for applications that require weather information for forecasting, event planning, environmental monitoring, or integrating weather data into services."
    },
    "NEWS_API": {
      "Input": "To use this API, you need to provide a search query and can optionally include a start and end date for the articles you're interested in. You can also specify how you want the results sorted, the language of the articles, and particular domains to include or exclude. You can choose how many results you want per page and which page of results you want to see. An API key is required for access.",
      "Output": "The API gives you back a list of news articles in JSON format. Each article includes details like the title, author, source, URL, publication date, and a brief summary.",
      "Use": "This API helps you find and analyze news articles from a wide range of sources published in the last 5 years. It’s useful for discovering news on various topics and conducting detailed news analysis."
    },
    "NEWS_API_TOP_HEADLINES": {
      "Input": "To use this API, you need to provide your API key. You can optionally specify a country to get headlines from, filter by news category (like business, sports, or technology), choose specific news sources, and include keywords to refine your search. You can also decide how many headlines you want to see per page and which page of results to view.",
      "Output": "The API provides a list of breaking news headlines in JSON format. Each headline includes details such as the source of the news, author, title, a brief description, the article's URL, an image URL, publication date, and the full content of the article.",
      "Use": "This API is used to get the latest breaking news headlines from various sources. It’s useful for staying updated with current events, filtering news by category or source, and getting specific headlines based on keywords."
    },
      "Stack_Exchange_Questions": {
        "Input": "Parameters for querying questions include 'fromdate', 'todate', 'min', 'max', 'tagged', 'order', 'sort', 'page', 'pagesize', and 'site'.",
        "Output": "Returns a list of questions from the Stack Exchange site matching the specified query parameters. The response includes details about each question such as the title, body, creation date, and other metadata.",
        "Use": "Retrieve and filter questions from the Stack Exchange site based on various criteria such as date range, tags, sorting options, and pagination. Useful for displaying or analyzing questions related to specific topics or time periods."
      },
      "Stack_Exchange_Answers": {
        "Input": "Parameters for querying answers include 'ids', 'filter', and 'site'.",
        "Output": "Returns details about specific answers from the Stack Exchange site. The response includes information such as the answer's content, creation date, and author.",
        "Use": "Retrieve details about specific answers to questions, which can be useful for examining responses to particular queries or analyzing the quality of answers."
      },
      "Stack_Exchange_Users": {
        "Input": "Parameters for querying user details include 'ids', 'filter', and 'site'.",
        "Output": "Returns information about users on the Stack Exchange site, including their reputation, user type, and associated questions and answers.",
        "Use": "Obtain details about users on the Stack Exchange site, which can be useful for user analysis, profile lookups, or understanding user contributions to the site."
      }        
}